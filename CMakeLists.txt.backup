set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_VERSION 1)

cmake_minimum_required(VERSION 3.13)

set(CMAKE_C_COMPILER clang)
set(CMAKE_CXX_COMPILER clang++)
set(CMAKE_ASM_COMPILER clang)
set(CMAKE_AR llvm-ar-14)
set(CMAKE_OBJCOPY llvm-objcopy-14)
set(CMAKE_OBJDUMP llvm-objdump-14)
set(SIZE llvm-size-14)

set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)


project(Example C CXX ASM)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_C_STANDARD 11)

add_compile_options(-mcpu=cortex-m3 -mthumb -mthumb-interwork)  

add_compile_options(-ffunction-sections -fdata-sections -fno-common -fmessage-length=0)

add_compile_options(-Ofast)

include_directories(Core/Inc Drivers/Inc)


add_definitions(-DDEBUG -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER)

file(GLOB_RECURSE SOURCES "Core/*.*" "Drivers/*.*")


set(LINKER_SCRIPT ${CMAKE_SOURCE_DIR}/STM32F103C8Tx_FLASH.ld)
add_link_options(-Wl,-gc-sections,--print-memory-usage,-Map=${PROJECT_BINARY_DIR}/${PROJECT_NAME}.map)


add_link_options(-mcpu=cortex-m3 -mthumb -mthumb-interwork) 


add_link_options(-T ${LINKER_SCRIPT})

add_executable(${PROJECT_NAME}.elf ${SOURCES} ${LINKER_SCRIPT})

set(HEX_FILE ${PROJECT_BINARY_DIR}/${PROJECT_NAME}.hex)



add_custom_command(TARGET ${PROJECT_NAME}.elf POST_BUILD
        COMMAND ${CMAKE_OBJCOPY} -Oihex $<TARGET_FILE:${PROJECT_NAME}.elf> ${HEX_FILE}
        COMMENT "Building ${HEX_FILE}")
